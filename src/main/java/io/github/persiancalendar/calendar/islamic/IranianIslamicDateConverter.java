package io.github.persiancalendar.calendar.islamic;

/**
 * Credits of this work goes to Saeed Rasooli and his
 * Kudos to his creative work!
 * I've tried to optimize its runtime performance, so it is a bit different from the way it is used in starcal.
 */
public class IranianIslamicDateConverter {

    // This is a package public API used in the app
    public final static int latestSupportedYearOfIran = 1401;

    private final static long jdSupportStart = 2425063; // CivilDate(1927, 7, 1).toJdn()
    private final static long jdSupportEnd;
    private final static int[] months;
    private final static int supportedYears;
    private final static int supportedYearsStart = 1346;

    static {
        // https://calendar.ut.ac.ir/Fa/News/Data/Doc/Calendar%201401-Full.pdf
        // https://calendar.ut.ac.ir/Fa/Software/CalConv.asp
        int[] hijriMonths = {
                /*1346*/29, 30, 30, 29, 30, 30, 30, 29, 29, 30, 29, 29,
                /*1347*/30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29,
                /*1348*/29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30,
                /*1349*/29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29,
                /*1350*/30, 29, 29, 30, 30, 29, 29, 30, 29, 30, 30, 29,
                /*1351*/30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29,
                /*1352*/30, 30, 29, 30, 30, 30, 29, 29, 29, 30, 29, 30,
                /*1353*/29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,
                /*1354*/29, 30, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30,
                /*1355*/29, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29,
                /*1356*/30, 29, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30,
                /*1357*/29, 30, 29, 30, 29, 30, 29, 29, 30, 30, 29, 30,
                /*1358*/30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30,
                /*1359*/30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 29, 30,
                /*1360*/30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30,
                /*1361*/29, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29,
                /*1362*/30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30,
                /*1363*/29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29,
                /*1364*/30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,
                /*1365*/29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30,
                /*1366*/29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30,
                /*1367*/30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29,
                /*1368*/30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30,
                /*1369*/29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30,
                /*1370*/29, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30,
                /*1371*/29, 30, 29, 30, 29, 30, 29, 29, 30, 30, 30, 29,
                /*1372*/30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30,
                /*1373*/29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30,
                /*1374*/29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,
                /*1375*/29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29,
                /*1376*/30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30,
                /*1377*/29, 30, 29, 29, 30, 30, 29, 30, 30, 30, 29, 30,
                /*1378*/29, 29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30,
                /*1379*/30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30,
                /*1380*/30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30,
                /*1381*/30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,
                /*1382*/30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30,
                /*1383*/29, 29, 30, 30, 29, 30, 30, 30, 29, 30, 29, 29,
                /*1384*/30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 30, 29,
                /*1385*/29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 30,
                /*1386*/29, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,
                /*1387*/29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30,
                /*1388*/29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,
                /*1389*/29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29,
                /*1390*/30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29,
                /*1391*/29, 30, 29, 29, 30, 30, 30, 29, 30, 30, 29, 30,
                /*1392*/29, 29, 30, 29, 29, 30, 30, 29, 30, 30, 29, 30,
                /*1393*/30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 29, 30,
                /*1394*/30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 29, 30,
                /*1395*/30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 29, 30,
                /*1396*/30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30,
                /*1397*/29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29,
                /*1398*/30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30,
                /*1399*/29, 30, 29, 30, 29, 29, 30, 30, 29, 30, 30, 29,
                /*1400*/30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30, 30,
                /*1401*/29, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 29,
                /*1402*/30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,
                /*1403*/29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,
                /*1404*/30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30,
                /*1405*/29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30,
                /*1406*/29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30,
                /*1407*/30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29,
                /*1408*/30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29,
                /*1409*/30, 30, 30, 29, 29, 30, 29, 30, 29, 29, 30, 30,
                /*1410*/29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30,
                /*1411*/30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 29,
                /*1412*/30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29,
                /*1413*/30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,
                /*1414*/29, 30, 29, 29, 30, 29, 30, 29, 29, 30, 30, 30,
                /*1415*/30, 30, 29, 29, 29, 30, 29, 29, 29, 30, 30, 30,
                /*1416*/30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29,
                /*1417*/30, 30, 30, 29, 29, 30, 29, 30, 29, 30, 29, 29,
                /*1418*/30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 30, 29,
                /*1419*/29, 30, 29, 30, 29, 30, 30, 29, 29, 30, 30, 30,
                /*1420*/29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29,
                /*1421*/30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30, 30,
                /*1422*/29, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30,
                /*1423*/29, 30, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30,
                /*1424*/30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,
                /*1425*/30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30,
                /*1426*/29, 29, 30, 29, 30, 30, 30, 29, 30, 30, 29, 29,
                /*1427*/30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30,
                /*1428*/29, 30, 29, 29, 29, 30, 30, 29, 30, 30, 30, 29,
                /*1429*/30, 29, 30, 29, 29, 29, 30, 30, 29, 30, 30, 29,
                /*1430*/30, 30, 29, 29, 30, 29, 30, 29, 29, 30, 30, 29,
                /*1431*/30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29,
                /*1432*/30, 30, 29, 30, 30, 30, 29, 30, 29, 29, 30, 29,
                /*1433*/29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 30,
                /*1434*/29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29,
                /*1435*/29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30,
                /*1436*/29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30,
                /*1437*/29, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30,
                /*1438*/29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30,
                /*1439*/29, 30, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29,
                /*1440*/30, 29, 30, 30, 30, 29, 30, 30, 29, 29, 30, 29,
                /*1441*/29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30,
                /*1442*/29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29,
                /*1443*/29, 30, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29,
                /*1444*/30, 30, 29, 30, 29, 29, 30,/**/30, 29, 30, 29, 29
        };

        supportedYears = hijriMonths.length / 12;
        months = new int[hijriMonths.length];

        int jd = 0;
        for (int m = 0; m < hijriMonths.length; ++m) {
            months[m] = jd;
            jd += hijriMonths[m];
        }
        jdSupportEnd = jd + jdSupportStart;
    }

    public static long toJdn(int year, int month, int day) {
        int yearIndex = year - supportedYearsStart;
        if (yearIndex < 0 || yearIndex >= supportedYears) return -1;
        return months[yearIndex * 12 + month - 1] + day + jdSupportStart - 1;
    }

    public static int[] fromJdn(long jd) {
        if (jd < jdSupportStart || jd >= jdSupportEnd) return null;
        int days = (int) (jd - jdSupportStart);

        int index = (int) (days / 29.572); // It is an estimation of lunar month length which is 29.53059
        while (index + 1 < months.length && months[index + 1] <= days) ++index;

        int yearIndex = index / 12;
        int month = index % 12;
        int day = days - months[index];
        return new int[]{yearIndex + supportedYearsStart, month + 1, day + 1};
    }
}
